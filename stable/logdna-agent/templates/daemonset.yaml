{{- if (or .Values.logdna.key .Values.logdna.secrets) -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "logdna.name" . }}
  labels:
    app: {{ template "logdna.name" . }}
    chart: {{ template "logdna.chart" . }}
    helm.sh/chart: {{ template "logdna.chart" . }}
    release: {{ .Release.Name }}
spec:
  {{- if .Values.daemonset.updateStrategy }}
  updateStrategy:
{{ toYaml .Values.daemonset.updateStrategy | indent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        app: {{ template "logdna.name" . }}
        chart: {{ template "logdna.chart" . }}
        helm.sh/chart: {{ template "logdna.chart" . }}
        release: {{ .Release.Name }}
      {{- if .Values.updateOnSecretChange }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum | quote }}
      {{- end }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      containers:
      - name: {{ template "logdna.name" . }}
        image: "{{.Values.image.name}}:{{.Values.image.tag}}"
{{- if eq .Values.logdna.autoupdate "0" }}
        imagePullPolicy: "{{.Values.image.pullPolicy}}"
{{- else }}
        imagePullPolicy: "always"
{{- end }}
        env:
          - name: LOGDNA_AGENT_KEY
            valueFrom:
              secretKeyRef:
                name: {{ if .Values.logdna.secrets -}}{{ .Values.logdna.secrets }}{{ else }}{{ template "logdna.name" . }}{{ end }}
                key: logdna-agent-key
          - name: LOGDNA_PLATFORM
            value: k8s
{{- if .Values.logdna.tags }}
          - name: LOGDNA_TAGS
            value: {{ .Values.logdna.tags }}
{{- end }}
{{- if .Values.logdna.autoupdate }}
          - name: LOGDNA_AUTOUPDATE
            value: "{{ .Values.logdna.autoupdate }}"
{{- end }}
{{- if .Values.logdna.apihost }}
          - name: LDAPIHOST
            value: {{ .Values.logdna.apihost }}
{{- end }}
{{- if .Values.logdna.loghost }}
          - name: LDLOGHOST
            value: {{ .Values.logdna.loghost }}
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: mnt
          mountPath: /mnt
          readOnly: true
        - name: docker
          mountPath: /var/run/docker.sock
        - name: osrelease
          mountPath: /etc/os-release
        - name: logdnahostname
          mountPath: /etc/logdna-hostname
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: mnt
        hostPath:
          path: /mnt
      - name: docker
        hostPath:
          path: /var/run/docker.sock
      - name: osrelease
        hostPath:
          path: /etc/os-release
      - name: logdnahostname
        hostPath:
          path: /etc/hostname
      livenessProbe:
        exec:
          command:
            - /usr/bin/logdna-agent
            - --version
        initialDelaySeconds: 30
        periodSeconds: 30
      readinessProbe:
        exec:
          command:
            - /usr/bin/logdna-agent
            - --version
        initialDelaySeconds: 30
        periodSeconds: 30
      tolerations:
{{ toYaml .Values.daemonset.tolerations | indent 8 }}
{{ end }}
